{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\notebook\\\\Luciano Pulido\\\\Programacion\\\\Dapps\\\\ERC20\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from \"web3\";\nimport web3 from \"../ethereum/web3\";\nimport contratoToken from \"../abis/Main.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() // Carga de Web3\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  console.log('window.web3 esta activo');\n                  window.web3 = new Web3(web3.currentProvider);\n                } else {\n                  window.alert(' \"No ethereum browser is installed. Try it installing MetaMask \"');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() // Carga de los datos de la blockchain\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, smartContract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Carga de la cuenta\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(\"smart contract\", this.state);\n                console.log('account: ', this.state.account);\n                networkId = '5777';\n                console.log('networkId: ', networkId);\n                networkData = contratoToken.networks[networkId];\n                console.log('networkData: ', networkData);\n\n                if (!networkData) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                abi = contratoToken.abi;\n                address = networkData.address;\n                console.log('abi', abi);\n                console.log('address', address);\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                }); // Direccion del contrato\n\n                _context3.next = 20;\n                return this.state.contract.methods.getContract().call();\n\n              case 20:\n                smartContract = _context3.sent;\n                this.setState({\n                  direccion_smart_contract: smartContract\n                });\n                console.log(\"direccion smart contract: \", smartContract);\n                _context3.next = 26;\n                break;\n\n              case 25:\n                window.alert('El Smart Contract no se ha desplegado en la red blockchain!');\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.envio =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(direccion, cantidad, ethers, mensaje) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                console.log(mensaje);\n                _context4.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context4.sent;\n                _context4.next = 7;\n                return _this.state.contract.methods.sendTokens(direccion, cantidad).send({\n                  from: accounts[0],\n                  value: ethers\n                });\n\n              case 7:\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                _this.setState({\n                  errorMessage: _context4.t0.message\n                });\n\n              case 12:\n                _context4.prev = 12;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context4.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 9, 12, 15]]);\n      }));\n\n      return function (_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.balance_persona =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(address_balance, mensaje) {\n        var balance_direccion;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                console.log(\"direccion del balance: \", address_balance);\n                console.log(mensaje);\n                _context5.next = 5;\n                return _this.state.contract.methods.balanceOfAddress(address_balance).call();\n\n              case 5:\n                balance_direccion = _context5.sent;\n                alert(parseFloat(balance_direccion));\n\n                _this.setState({\n                  address_balance: balance_direccion\n                });\n\n                _context5.next = 13;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                _this.setState({\n                  errorMessage: _context5.t0.message\n                });\n\n              case 13:\n                _context5.prev = 13;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context5.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 10, 13, 16]]);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.balance_contrato =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(mensaje) {\n        var balance;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                console.log(mensaje);\n                _context6.next = 4;\n                return _this.state.contract.methods.getTotalBalance().call();\n\n              case 4:\n                balance = _context6.sent;\n                alert(parseFloat(balance));\n                _context6.next = 11;\n                break;\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](0);\n\n                _this.setState({\n                  errorMessage: _context6.t0.message\n                });\n\n              case 11:\n                _context6.prev = 11;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context6.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 8, 11, 14]]);\n      }));\n\n      return function (_x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      account: '',\n      contract: null,\n      direccion_smart_contract: '',\n      owner: '',\n      direccion: '',\n      cantidad: 0,\n      loading: false,\n      errorMessage: '',\n      address_balance: '',\n      numTokens: 0\n    };\n    return _this;\n  } // Funcion para realizar la compra de Tokens\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"https://frogames.es/rutas-de-aprendizaje\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"DApp\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.direccion_smart_contract))))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Comprar tokens ERC-20\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var direccion = _this2.direccion.value;\n          var cantidad = _this2.cantidad.value;\n          var ethers = web3.utils.toWei(_this2.cantidad.value, 'ether');\n          var mensaje = \"Compra de tokens en ejecucion...\";\n\n          _this2.envio(direccion, cantidad, ethers, mensaje);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        placeholder: \"Direccion de destino\",\n        ref: function ref(input) {\n          _this2.direccion = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        placeholder: \"Cantidad de tokens a comprar (1 Token = 1 Ether)\",\n        ref: function ref(input) {\n          _this2.cantidad = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-danger btn-sm\",\n        value: \"COMPRAR TOKENS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), \"\\xA0\", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Balance total de tokens de un usuario\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var address = _this2.address_balance.value;\n          var mensaje = \"Balance de tokens de una persona en ejecucion...\";\n\n          _this2.balance_persona(address, mensaje);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        placeholder: \"Direccion del usuario\",\n        ref: function ref(input) {\n          _this2.address_balance = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-success btn-sm\",\n        value: \"BALANCE DE TOKENS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), \"\\xA0\", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Balance de tokens del Smart Contract\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var mensaje = \"Balance de tokens del Smart Contract en ejecucion...\";\n\n          _this2.balance_contrato(mensaje);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-primary btn-sm\",\n        value: \"BALANCE DE TOKENS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), \"\\xA0\", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"A\\xF1adir nuevos tokens\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var mensaje = \"Incremento de tokens del Smart Contract en ejecucion...\";\n          var numTokens = _this2.state.numTokens;\n\n          _this2.incremento_tokens(numTokens, mensaje);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-primary btn-sm\",\n        value: \"BALANCE DE TOKENS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\notebook\\Luciano Pulido\\Programacion\\Dapps\\ERC20\\src\\components\\App.js"],"names":["React","Component","Web3","web3","contratoToken","App","loadWeb3","loadBlockchainData","window","ethereum","enable","console","log","currentProvider","alert","eth","getAccounts","accounts","setState","account","state","networkId","networkData","networks","abi","address","contract","Contract","methods","getContract","call","smartContract","direccion_smart_contract","props","envio","direccion","cantidad","ethers","mensaje","sendTokens","send","from","value","errorMessage","message","loading","balance_persona","address_balance","balanceOfAddress","balance_direccion","parseFloat","balance_contrato","getTotalBalance","balance","owner","numTokens","event","preventDefault","utils","toWei","input","incremento_tokens"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Web3 from \"web3\";\nimport web3 from \"../ethereum/web3\";\nimport contratoToken from \"../abis/Main.json\"\n\nclass App extends Component {\n\n\n    async componentWillMount() {\n        // Carga de Web3\n        await this.loadWeb3()\n        // Carga de los datos de la blockchain\n        await this.loadBlockchainData()\n    }\n\n    // Carga de Web3\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.web3) {\n            console.log('window.web3 esta activo')\n            window.web3 = new Web3(web3.currentProvider)\n        } else {\n            window.alert(' \"No ethereum browser is installed. Try it installing MetaMask \"')\n        }\n    }\n\n    // Carga de los datos de la blockchain\n    async loadBlockchainData() {\n        const web3 = window.web3\n        // Carga de la cuenta\n        const accounts = await web3.eth.getAccounts()\n        this.setState({account: accounts[0]})\n        console.log(\"smart contract\", this.state)\n        console.log('account: ', this.state.account)\n        const networkId = '5777'\n        console.log('networkId: ', networkId)\n        const networkData = contratoToken.networks[networkId]\n        console.log('networkData: ', networkData)\n\n        if (networkData) {\n            const abi = contratoToken.abi\n            const address = networkData.address\n            console.log('abi', abi)\n            console.log('address', address)\n            const contract = new web3.eth.Contract(abi, address)\n            this.setState({contract})\n\n            // Direccion del contrato\n            const smartContract = await this.state.contract.methods.getContract().call()\n            this.setState({direccion_smart_contract: smartContract})\n            console.log(\"direccion smart contract: \", smartContract)\n        } else {\n            window.alert('El Smart Contract no se ha desplegado en la red blockchain!')\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '',\n            contract: null,\n            direccion_smart_contract: '',\n            owner: '',\n            direccion: '',\n            cantidad: 0,\n            loading: false,\n            errorMessage: '',\n            address_balance: '',\n            numTokens: 0\n\n        }\n    }\n\n    // Funcion para realizar la compra de Tokens\n    envio = async (direccion, cantidad, ethers, mensaje) => {\n        try {\n            console.log(mensaje)\n            const accounts = await web3.eth.getAccounts()\n            await this.state.contract.methods.sendTokens(direccion, cantidad).send({from: accounts[0], value: ethers})\n        } catch (err) {\n            this.setState({errorMessage: err.message})\n        } finally {\n            this.setState({loading: false})\n        }\n    }\n\n    // Funcion para visualizar el balance de tokens de un usuario\n    balance_persona = async (address_balance, mensaje) => {\n        try {\n            console.log(\"direccion del balance: \", address_balance)\n            console.log(mensaje)\n            const balance_direccion = await this.state.contract.methods.balanceOfAddress(address_balance).call()\n            alert(parseFloat(balance_direccion))\n            this.setState({address_balance: balance_direccion})\n        } catch (err) {\n            this.setState({errorMessage: err.message})\n        } finally {\n            this.setState({loading: false})\n        }\n    }\n\n    // Funcion para visualizar el balance del Smart Contract\n    balance_contrato = async (mensaje) => {\n        try {\n            console.log(mensaje)\n            const balance = await this.state.contract.methods.getTotalBalance().call()\n            alert(parseFloat(balance))\n        } catch (err) {\n            this.setState({errorMessage: err.message})\n        } finally {\n            this.setState({loading: false})\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <a\n                        className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                        href=\"https://frogames.es/rutas-de-aprendizaje\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        DApp\n                    </a>\n                    <ul className={\"navbar-nav px-3\"}>\n                        <li className={\"nav-item text-nowrap d-none d-sm-none d-sm-block\"}>\n                            <small className={\"text-white\"}>\n                                <span id={\"account\"}>{this.state.direccion_smart_contract}</span>\n                            </small>\n                        </li>\n                    </ul>\n                </nav>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n                            <div className=\"content mr-auto ml-auto\">\n                                <h1>Comprar tokens ERC-20</h1>\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const direccion = this.direccion.value\n                                    const cantidad = this.cantidad.value\n                                    const ethers = web3.utils.toWei(this.cantidad.value, 'ether')\n                                    const mensaje = \"Compra de tokens en ejecucion...\"\n                                    this.envio(direccion, cantidad, ethers, mensaje)\n                                }}>\n                                    <input type={\"text\"}\n                                           className={\"form-control mb-1\"}\n                                           placeholder={\"Direccion de destino\"}\n                                           ref={(input) => {\n                                               this.direccion = input\n                                           }}/>\n\n                                    <input type={\"text\"}\n                                           className={\"form-control mb-1\"}\n                                           placeholder={\"Cantidad de tokens a comprar (1 Token = 1 Ether)\"}\n                                           ref={(input) => {\n                                               this.cantidad = input\n                                           }}/>\n\n                                    <input type={\"submit\"}\n                                           className={\"btn btn-block btn-danger btn-sm\"}\n                                           value=\"COMPRAR TOKENS\"/>\n\n                                </form>\n\n                                &nbsp;\n\n                                <h1>Balance total de tokens de un usuario</h1>\n\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const address = this.address_balance.value\n                                    const mensaje = \"Balance de tokens de una persona en ejecucion...\"\n                                    this.balance_persona(address, mensaje)\n                                }}>\n\n                                    <input type={\"text\"}\n                                           className={\"form-control mb-1\"}\n                                           placeholder={\"Direccion del usuario\"}\n                                           ref={(input) => {\n                                               this.address_balance = input\n                                           }}/>\n                                    <input type={\"submit\"}\n                                           className={\"btn btn-block btn-success btn-sm\"}\n                                           value=\"BALANCE DE TOKENS\"/>\n                                </form>\n\n\n                                &nbsp;\n\n                                <h1>Balance de tokens del Smart Contract</h1>\n\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const mensaje = \"Balance de tokens del Smart Contract en ejecucion...\"\n                                    this.balance_contrato(mensaje)\n                                }}>\n                                    <input type={\"submit\"}\n                                           className={\"btn btn-block btn-primary btn-sm\"}\n                                           value=\"BALANCE DE TOKENS\"/>\n                                </form>\n\n                                &nbsp;\n\n                                <h1>Añadir nuevos tokens</h1>\n\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const mensaje = \"Incremento de tokens del Smart Contract en ejecucion...\"\n                                    const numTokens = this.state.numTokens\n                                    this.incremento_tokens(numTokens, mensaje)\n                                }}>\n                                    <input type={\"submit\"}\n                                           className={\"btn btn-block btn-primary btn-sm\"}\n                                           value=\"BALANCE DE TOKENS\"/>\n                                </form>\n\n                            </div>\n                        </main>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}